<?xml version="1.0" encoding="UTF-8"?>

<mule xmlns:json="http://www.mulesoft.org/schema/mule/json" xmlns:http="http://www.mulesoft.org/schema/mule/http"
  xmlns:apache-ignite="http://www.mulesoft.org/schema/mule/apache-ignite"
  xmlns="http://www.mulesoft.org/schema/mule/core" xmlns:doc="http://www.mulesoft.org/schema/mule/documentation"
  xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://www.mulesoft.org/schema/mule/core http://www.mulesoft.org/schema/mule/core/current/mule.xsd
http://www.mulesoft.org/schema/mule/apache-ignite http://www.mulesoft.org/schema/mule/apache-ignite/current/mule-apache-ignite.xsd
http://www.mulesoft.org/schema/mule/http http://www.mulesoft.org/schema/mule/http/current/mule-http.xsd
http://www.mulesoft.org/schema/mule/json http://www.mulesoft.org/schema/mule/json/current/mule-json.xsd">

  <flow name="queueInstance">
    <http:listener config-ref="HTTP_Listener_Configuration" path="/queueInstance" allowedMethods="POST"
      doc:name="http-in: POST /queueInstance">
      <http:response-builder>
        <http:header headerName="Content-Type" value="text/plain" />
      </http:response-builder>
    </http:listener>
    <apache-ignite:queue-instance config-ref="ignConfig" queue="#[payload.queue]" doc:name="ign: queue-instance" />
    <set-payload value="#[payload.toString()]" doc:name="payload: payload.toString()" />
    <exception-strategy ref="exceptionStrategy" doc:name="Reference Exception Strategy" />
  </flow>

  <flow name="queuePublish">
    <http:listener config-ref="HTTP_Listener_Configuration" path="/queuePublish" allowedMethods="POST"
      doc:name="http-in: POST /queuePublish">
      <http:response-builder>
        <http:header headerName="Content-Type" value="application/json" />
      </http:response-builder>
    </http:listener>
    <apache-ignite:queue-publish config-ref="ignConfig" queue="#[payload.queue]" item-ref="#[payload.item]"
      timeout="#[payload.timeout]" timeoutUnit="#[payload.timeoutUnit]" doc:name="Apache Ignite: queue-publish" />
    <set-payload value="{&quot;res&quot;:&quot;success!&quot;}" doc:name="payload:true" />
    <exception-strategy ref="exceptionStrategy" doc:name="Reference Exception Strategy" />
  </flow>

  <flow name="queueConsume">
    <http:listener config-ref="HTTP_Listener_Configuration" path="/queueConsume" allowedMethods="POST"
      doc:name="http-in: POST /queueConsume">
      <http:response-builder>
        <http:header headerName="Content-Type" value="application/json" />
      </http:response-builder>
    </http:listener>
    <apache-ignite:queue-consume config-ref="ignConfig" queue="#[payload.queue]" timeout="#[payload.timeout]"
      timeoutUnit="#[payload.timeoutUnit]" doc:name="ignite-queue: queue-consume" />
    <json:object-to-json-transformer doc:name="obj2json" />
    <exception-strategy ref="exceptionStrategy" doc:name="Reference Exception Strategy" />
  </flow>

  <flow name="queueIngestData">
    <http:listener config-ref="HTTP_Listener_Configuration" path="/queueIngestData" allowedMethods="POST"
      doc:name="http-in: POST /queueIngestData">
      <http:response-builder>
        <http:header headerName="Content-Type" value="application/json" />
      </http:response-builder>
    </http:listener>
    <apache-ignite:queue-ingest-data config-ref="ignConfig" queue="#[payload.queue]"
      dataProvider-ref="#[new com.hawkore.mule.apacheignite.example.rt.QueueIngestDataProvider(payload.data)]"
      async="#[payload.async]" batchSize="#[payload.batchSize]" numberOfIngesters="#[payload.numberOfIngesters]"
      doc:name="ign: cache-ingest-data" />
    <json:object-to-json-transformer doc:name="obj2json" />
    <exception-strategy ref="exceptionStrategy" doc:name="Reference Exception Strategy" />
  </flow>

  <flow name="queuePublishConsume">
    <http:listener config-ref="HTTP_Listener_Configuration" path="/queuePublishConsume" allowedMethods="POST"
      doc:name="http-in: POST /queuePublishConsume">
      <http:response-builder>
        <http:header headerName="Content-Type" value="application/json" />
      </http:response-builder>
    </http:listener>
    <apache-ignite:queue-publish-consume config-ref="ignConfig" queue="#[payload.queue]" item-ref="#[payload.item]"
      timeout="#[payload.timeout]" timeoutUnit="#[payload.timeoutUnit]" doc:name="Apache Ignite: queue-publish" />
    <json:object-to-json-transformer doc:name="obj2json" />
    <exception-strategy ref="exceptionStrategy" doc:name="Reference Exception Strategy" />
  </flow>

  <flow name="queuePublishConsume_listener">
    <apache-ignite:queue-listener config-ref="ignConfig" queue="QUEUE_PUBCON"
      doc:name="ign: queue-listener: QUEUE_PUBCON" />
    <set-payload value="This is a reply, received value: #[payload]" doc:name="payload: reply" />
  </flow>

  <flow name="queueListener">
    <apache-ignite:queue-listener config-ref="ignConfig" queue="QUEUE_SRC" doc:name="ign: queue-listener" />
    <component doc:name="java: MessageReceivedHandler">
      <singleton-object class="com.hawkore.mule.apacheignite.example.rt.MessageReceivedHandler" />
    </component>
    <exception-strategy ref="exceptionStrategy" doc:name="Reference Exception Strategy" />
  </flow>
  <flow name="queueListener_publish">
    <http:listener config-ref="HTTP_Listener_Configuration" path="/queueListener_publish" allowedMethods="POST"
      doc:name="http-in: POST /queueListener_publish">
      <http:response-builder>
        <http:header headerName="Content-Type" value="application/json" />
      </http:response-builder>
    </http:listener>
    <apache-ignite:queue-publish config-ref="ignConfig" queue="#[payload.queue]" item-ref="#[payload.item]"
      timeout="#[payload.timeout]" timeoutUnit="#[payload.timeoutUnit]" doc:name="Apache Ignite: queue-publish" />
    <set-payload value="{&quot;res&quot;:&quot;success!&quot;}" doc:name="payload:true" />
    <exception-strategy ref="exceptionStrategy" doc:name="Reference Exception Strategy" />
  </flow>
  <flow name="queueListener_retrieve">
    <http:listener config-ref="HTTP_Listener_Configuration" path="/queueListener_retrieve" allowedMethods="POST"
      doc:name="http-in: POST /queueListener_retrieve">
      <http:response-builder>
        <http:header headerName="Content-Type" value="application/json" />
      </http:response-builder>
    </http:listener>
    <component doc:name="java: MessagesFromQueueHandler">
      <singleton-object class="com.hawkore.mule.apacheignite.example.rt.MessagesFromQueueHandler" />
    </component>
    <json:object-to-json-transformer doc:name="obj2json" />
    <exception-strategy ref="exceptionStrategy" doc:name="Reference Exception Strategy" />
  </flow>
</mule>
